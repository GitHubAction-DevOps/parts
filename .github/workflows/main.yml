## This is a basic workflow to help you get started with Actions
#         & 'C:\Program Files\sqlpackage-win7-x64-en-US-15.0.4826.1\sqlpackage.exe' /Action:Publish /SourceFile:${{github.workspace}}\partsunlimited.dacpac /tsn:${{env.server_name}} /tdn:${{env.database}} /su:${{env.db_user}} /sp:${{ secrets.db_password }}
name: CI

## Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master1 ]

env:
  app_pool_name: partspool
  app_name: partsunlimited
  server_name: GANGAVALI\SQLEXPRESS
  database: partsunlimited
  db_user: akshay
  PACKAGE_TEMP_PATH: Content\D_C\a\PartsUnlimited\PartsUnlimited\src\PartsUnlimitedWebsite\obj\Release\Package\PackageTmp

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout the source code
      uses: actions/checkout@v2
      
    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1.0.1

    - name: Nuget Restore
      run: nuget restore
      
    - name: Build the Project
      run: |
        msbuild PartsUnlimited.sln /p:TransformWebConfigEnabled=False /p:AutoParameterizationWebConfigConnectionStrings=False /p:Configuration=Release /p:Platform='Any CPU' /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="${{github.workspace}}\stagingdir" 
    
    - name: list files
      run : ls ${{github.workspace}}\stagingdir
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@2.1.0
      with:  
        name: artifacts
        path: |
          ${{github.workspace}}\stagingdir
          ${{github.workspace}}\*.bacpac
          ${{github.workspace}}\*.ps1
  
  Database:
    runs-on: db
    needs: [build]
    steps:
    - name: Download Build Artifact
      uses: actions/download-artifact@v2
      with:
        name: artifacts
        path: ${{github.workspace}}
    - name: list
      run : ls ${{github.workspace}}
      
    - name: list1
      run : ls ${{github.workspace}}\stagingdir
    - name: Restore the database
      run: |
         & 'C:\Program Files\sqlpackage-win7-x64-en-US-15.0.4826.1\sqlpackage.exe' /Action:Import /sf:${{github.workspace}}\partsunlimited.bacpac /tsn:${{env.server_name}} /tdn:${{env.database}} /tu:${{env.db_user}} /tp:${{ secrets.db_password }}
    
    - name: Extract Artifact
      run: expand-archive -path ${{github.workspace}}\stagingdir\*.zip -destinationpath '.\webapp'
    
    - name: Run Powershell
      run: |
        & '${{github.workspace}}\app_pool.ps1 -pool_name ${{env.app_pool_name}} -app_name ${{env.app_name}} -workspace ${{github.workspace}} -packagepath ${{env.PACKAGE_TEMP_PATH}}'
#      shell: pwsh     
#    - name: Create App pool
#      run: New-WebAppPool -Name ${{env.app_pool_name}} -Force
    
#    - name: Create website
#      run: New-Website -Name partsunlimited -ApplicationPool partspool -Force -PhysicalPath ${{github.workspace}}\webapp\${{env.PACKAGE_TEMP_PATH}} -Port 8082
#      shell: pwsh
 # deploy:
 #   name: DEPLOY TO AZURE WEB APP
 #   runs-on: windows-latest
 #   needs: [build]
 #   steps:
 #   - name: Download Build Artifact
 #     uses: actions/download-artifact@v2
 #     with:
 #       name: PartsUnlimited
 #       path: ${{github.workspace}}
 #   - name: Extract Artifact
 #     run: expand-archive -path '*.zip' -destinationpath '.\webapp'
 #     shell: pwsh
 #   - name: Azure WebApp Deploy
 #     uses: Azure/webapps-deploy@v2
 #     with:
 #       app-name: partsproject
 #       publish-profile: ${{secrets.publish_profile}}
 #       package: webapp\${{env.PACKAGE_TEMP_PATH}}


